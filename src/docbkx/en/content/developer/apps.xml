<?xml version='1.0' encoding='UTF-8'?>
<chapter version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd"
          xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xl="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xhtml="http://www.w3.org/1999/xhtml"
         xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:mth="http://www.w3.org/1998/Math/MathML"
         xmlns:db="http://docbook.org/ns/docbook"
         xml:id="apps">
  <title>Apps</title>
  <para>A packaged app is an <link xl:href="https://developer.mozilla.org/en-US/docs/Open_Web_apps_and_Web_standards">Open Web
      App</link> that has all of its resources (HTML, CSS, JavaScript, app manifest, and so on)
    contained in a zip file. It can be uploaded to a DHIS2 installation directly through the user
    interface at runtime. A packaged app is a ZIP file with an <link xl:href="http://www.w3.org/2008/webapps/manifest/">app manifest</link> in its root directory. The
    manifest must be named <filename>manifest.webapp</filename>. A throrough description of apps can
    be obtained <link xl:href="https://developer.mozilla.org/en-US/Apps/Quickstart"
    >here</link>.</para>
  <section xml:id="apps_purpose_packaged_apps">
    <title>Purpose of packaged Apps</title>
    <para>The purpose of packaged apps is to extend the web interface of DHIS2, without the need to
      modify the source code of DHIS2 itself. A system deployment will often have custom and unique
      requirements. The apps provide a convenient extension point to the user interface. Through
      apps, you can complement and customize the DHIS2 core functionality with custom solutions in
      a loosely coupled and clean manner.</para>
    <para>Apps do not have permissions to interact directly with DHIS2 Java API. Instead, apps are
      expected to use functionality and interact with the DHIS2 services and data by utilizing the
      DHIS2 Web API.</para>
  </section>
  <section xml:id="apps_creating_apps">
    <title>Creating Apps</title>
    <para>DHIS2 apps are constructed with HTML, JavaScript and CSS files, similar to any other web
      application. Apps also need a special file called <emphasis role="italic"
        >manifest.webapp</emphasis> which describes the contents of the app. A basic example of the
        <emphasis role="italic">manifest.webapp</emphasis> is shown below:</para>
    <para>
      <screen>{
    &quot;version&quot;: &quot;0.1&quot;,
    &quot;name&quot;: &quot;My App&quot;,
    &quot;description&quot;: &quot;My App is a Packaged App&quot;,
    &quot;launch_path&quot;: &quot;/index.html&quot;,
    &quot;appType&quot;: &quot;APP&quot;,
    &quot;icons&quot;: {
        &quot;16&quot;: &quot;/img/icons/mortar-16.png&quot;,
        &quot;48&quot;: &quot;/img/icons/mortar-48.png&quot;,
        &quot;128&quot;: &quot;/img/icons/mortar-128.png&quot;
    },
    &quot;developer&quot;: {
        &quot;name&quot;: &quot;Me&quot;,
        &quot;url&quot;: &quot;http://me.com&quot;
    },
    &quot;default_locale&quot;: &quot;en&quot;,
    &quot;<?oxy_comment_start author="cecilia" timestamp="20160624T121102+0200" comment="At next release: 
Explain all properties that are in activities." flag="done"?>activities<?oxy_comment_end?>&quot;: {
        &quot;dhis&quot;: {
            &quot;href&quot;: &quot;*&quot;,
            "namespace": "my-namespace"
        }
    }
}</screen>
    </para>
    <para>The <emphasis role="italic">manifest.webapp</emphasis> file must be located at the root of
      the project. Among the properties are:</para>
    <itemizedlist>
      <listitem>
        <para>The <emphasis role="italic">icons→48</emphasis> property is used for the icon that is
          displayed on the list of apps that are installed on a DHIS2 instance.</para>
      </listitem>
      <listitem>
        <para>The <emphasis role="italic">activities</emphasis> property is an dhis-specific
          extension meant to differentiate between a standard Open Web App and an app that can be
          installed in DHIS2. </para>
      </listitem>
      <listitem>
        <para>The <emphasis role="italic">*</emphasis> value for <emphasis role="italic"
            >href</emphasis> is converted to the appropriate URL when the app is uploaded and
          installed in DHIS2. This value can then be used by the application&apos;s JavaScript and
          HTML files to make calls to the DHIS2 Web API and identify the correct location of DHIS2
          server on which the app has been installed. To clarify, the <emphasis role="italic"
            >activities</emphasis> part will look similar to this after the app has been
          installed:</para>
      </listitem>
    </itemizedlist>
    <screen>&quot;activities&quot;: {
    &quot;dhis&quot;: {
        &quot;href&quot;: &quot;http://apps.dhis2.org/demo&quot;,
        "namespace": "my-namespace"
    }
 }</screen>
    <para>The namespace property can be added if your app is utilizing the dataStore or
      userDataStore api. When adding the namespace property, only users with access to your app are
      allowed to make changes to the namespace. A namespace can only be reserved in this way once.
      If another app tries to reserve a namespace already in use, the installation of the other app
      will fail.</para>
    <para>If you have a collection of apps that want to share the same namespace, but also wish to
      reserve it, the users of the apps needs to have the authority to use the app that initially
      reserved the namespace.</para>
    <note>
      <para>Namespaces will not be created until atleast one key-value pair is present in the
        namespace. Specifying a namespace in the manifest only restricts the access and does not
        create any data in the namespace.</para>
    </note>
    <para>The <emphasis>appType</emphasis> property specifies how the app will be displayed by the
      DHIS2 instance. The possible values for appType and their effects are explained in the
      following table.</para>
    <para>
      <table frame="all">
        <title>App types</title>
        <tgroup cols="2">
          <colspec colname="c1" colnum="1" colwidth="1*"/>
          <colspec colname="c2" colnum="2" colwidth="2.7*"/>
          <thead>
            <row>
              <entry>App type</entry>
              <entry>Description</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>APP</entry>
              <entry>Will be listed in the "apps" menu</entry>
            </row>
            <row>
              <entry>DASHBOARD_WIDGET</entry>
              <entry>Available from the search box on the dashboard, can be added as an item on any
                dashboard</entry>
            </row>
            <row>
              <entry>TRACKER_DASHBOARD_WIDGET</entry>
              <entry>Can be embedded in the tracker dashboard <emphasis>(this type is not yet
                  supported)</emphasis></entry>
            </row>
            <row>
              <entry>RESOURCE</entry>
              <entry>Resource apps are packages that can be shared by multiple other apps. These
                apps are not shown anywhere in the UI, except from in the app management
                app.</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </para>
    <para>If no <emphasis>appType</emphasis> is specified in the manifest, the system will use "APP"
      by default.</para>
    <para>To read the JSON structure into JavaScript, you can use a regular AJAX request and parse
      the JSON into an object. Most Javascript libraries provide some support, for instance with
      jQuery it can be done like this:</para>
    <screen>$.getJSON( &quot;manifest.webapp&quot;, function( json ) {
    var apiBaseUrl = json.activities.dhis.href + &quot;/api&quot;;
} );</screen>
    <para>The app can contain HTML, JavaScript, CSS, images and other files which may be required to
      support it . The file structure could look something like this:</para>
    <screen>/
/manifest.webapp    #manifest file (mandatory)
/css/               #css stylesheets (optional)
/img/               #images (optional)
/js/&#160;               #javascripts (optional)</screen>
    <note>
      <para>It is only the <filename>manifest.webapp</filename> file which must be placed in the
        root. It is up the developer to organize CSS, images and JavaScript files inside the app as
        needed.</para>
    </note>
    <para>All the files in the project should be compressed into a standard zip archive. Note that
      the manifest.webapp file must be located on the root of the zip archive (do not include a
      parent directory in the archive). The zip archive can then be installed into DHIS2 as you
      will see in the next section.</para>
  </section>
  <section xml:id="apps_installing_apps">
    <title>Installing Apps into DHIS2</title>
    <para>Apps can be installed by uploading zip file into the App Manager. In, Services →
      Apps, click on the <emphasis role="italic">App Store</emphasis> menu item.
      <inlinemediaobject>      
        <imageobject>
          <imagedata fileref="resources/images/apps/app-management.png" format="PNG"></imagedata>
        </imageobject>
        </inlinemediaobject>
The app can be uploaded by pressing the Browse button and after selecting the zip package,
      the file is uploaded automatically and installed in DHIS2. You can also browse through apps
      in the DHIS2 <link xl:href="https://www.dhis2.org/appstore">app store</link> and download apps
      from there. The DHIS2 app store allows for app searching, reviewing, commenting, requesting
      features, rating on the apps by the community.</para>
  </section>
  <section xml:id="apps_launching_apps">
    <title>Launching Apps</title>
    <para>After installation, your apps will be integrated with the menu system and can be accessed
      under services and from the module overview page. It can also be accessed from the home page
      of the apps module.  Click on an app in the list in order to launch it.</para>
  </section>
</chapter>
